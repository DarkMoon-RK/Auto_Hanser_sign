# This GitHub Actions workflow is designed to run the main.py script whenever there is a push to the main branch.
# 
# Workflow Name: Run main.py
# 
# Triggers:
# - on push to the main branch
# 
# Jobs:
# - run-main: Executes the main job on a Windows environment.
# 
# Steps:
# 1. Checkout the repository using actions/checkout@v3.
# 2. Set up Python 3.11 using actions/setup-python@v4.
# 3. Install dependencies listed in requirements.txt if it exists.
# 4. Install Google Chrome silently.
# 5. Download and install the latest ChromeDriver.
# 6. Verify the ChromeDriver installation.
# 7. Set the ChromeDriver path.
# 8. Run the main.py script, using a secret SETTINGS_JSON for configuration.
name: Run main.py

on:
  schedule:
      - cron: '1 16 * * *'  
      - cron: '40 0 * * *'      
    

jobs:
  run-main:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      shell: pwsh
      run: |
        python -m pip install --upgrade pip
        if (Test-Path requirements.txt) {
          pip install -r requirements.txt
        }

      env:
        PYTHONIOENCODING: utf-8

    - name: Install Google Chrome
      run: |
        $ProgressPreference = 'SilentlyContinue'
        Invoke-WebRequest -Uri "https://dl.google.com/chrome/install/latest/chrome_installer.exe" -OutFile "chrome_installer.exe"
        Start-Process -FilePath "chrome_installer.exe" -ArgumentList "/silent /install" -NoNewWindow -Wait

    - name: Install ChromeDriver
      run: |
        $chromeVersion = (Invoke-WebRequest -Uri "https://chromedriver.storage.googleapis.com/LATEST_RELEASE").Content
        Invoke-WebRequest -Uri "https://chromedriver.storage.googleapis.com/$chromeVersion/chromedriver_win32.zip" -OutFile "chromedriver.zip"
        Expand-Archive chromedriver.zip -DestinationPath "./chromedriver-win64/"
        $Env:PATH += ";$PWD\chromedriver-win64"

    - name: Check ChromeDriver Installation
      run: |
        if (-not (Test-Path "./chromedriver-win64/chromedriver.exe")) {
          throw "ChromeDriver not found at expected location"
        }
        
    - name: Set ChromeDriver Path
      run: |
          $Env:PATH += ";$PWD\chromedriver-win64"
      
        
    - name: Run main.py
      env:
        SETTINGS_JSON: ${{ secrets.SETTINGS_JSON }}
      run: |
        echo $env:SETTINGS_JSON > setting.json
        python main.py
        Remove-Item setting.json
